@page "/intervention/{Id:guid}"
@using MauiHybridAuth.Shared.Models
@using MauiHybridAuth.Shared.Services
@inject IInterventionService InterventionService
@inject NavigationManager NavigationManager

<PageTitle>Intervention Details</PageTitle>

<div class="intervention-details">
    @if (intervention == null)
    {
        <div class="loading">
            <RadzenProgressBarCircular Indeterminate="true" />
            <p>Loading intervention details...</p>
        </div>
    }
    else
    {
        <RadzenCard Class="mb-4">
            <RadzenCardHeader>
                <RadzenRow Class="align-items-center">
                    <RadzenColumn Size="12">
                        <h2 class="mb-0">
                            <RadzenIcon Icon="@GetInterventionIcon(intervention)" Class="me-2" />
                            @intervention.Name
                        </h2>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCardHeader>

            <RadzenCardContent>
                <RadzenRow>
                    <RadzenColumn Size="12">
                        <p class="description">@intervention.Description</p>
                    </RadzenColumn>
                </RadzenRow>

                @if (intervention is Substance substance)
                {
                    <RadzenRow Class="mt-3">
                        <RadzenColumn Size="6">
                            <div class="detail-item">
                                <strong>Dose Range:</strong> @substance.DoseRange
                            </div>
                        </RadzenColumn>
                        <RadzenColumn Size="6">
                            <div class="detail-item">
                                <strong>Duration:</strong> @substance.DurationInMinutes minutes
                            </div>
                        </RadzenColumn>
                    </RadzenRow>

                    @if (substance.ClassificationTags?.Any() == true)
                    {
                        <RadzenRow Class="mt-3">
                            <RadzenColumn Size="12">
                                <div class="detail-item">
                                    <strong>Classification Tags:</strong>
                                    <div class="tags">
                                        @foreach (var tag in substance.ClassificationTags)
                                        {
                                            <RadzenBadge BadgeStyle="BadgeStyle.Info" Text="@tag.ToString()" Class="me-2" />
                                        }
                                    </div>
                                </div>
                            </RadzenColumn>
                        </RadzenRow>
                    }
                }

                @if (intervention.GetCategories()?.Any() == true)
                {
                    <RadzenRow Class="mt-3">
                        <RadzenColumn Size="12">
                            <div class="detail-item">
                                <strong>Categories:</strong>
                                <div class="categories">
                                    @foreach (var category in intervention.GetCategories())
                                    {
                                        <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text="@category.Name" Class="me-2" />
                                    }
                                </div>
                            </div>
                        </RadzenColumn>
                    </RadzenRow>
                }

                <RadzenRow Class="mt-3">
                    <RadzenColumn Size="6">
                        <div class="detail-item">
                            <strong>Average Rating:</strong>
                            <div class="rating">
                                @{
                                    var avgRating = intervention.CalculateAverageRating();
                                    var fullStars = (int)avgRating;
                                    var hasHalfStar = avgRating % 1 >= 0.5;
                                }
                                @for (int i = 0; i < fullStars; i++)
                                {
                                    <RadzenIcon Icon="star" Class="text-warning" />
                                }
                                @if (hasHalfStar)
                                {
                                    <RadzenIcon Icon="star_half" Class="text-warning" />
                                }
                                @for (int i = fullStars + (hasHalfStar ? 1 : 0); i < 5; i++)
                                {
                                    <RadzenIcon Icon="star_border" Class="text-muted" />
                                }
                                <span class="ms-2">(@avgRating.ToString("F1")/5.0)</span>
                            </div>
                        </div>
                    </RadzenColumn>
                    <RadzenColumn Size="6">
                        <div class="detail-item">
                            <strong>Total Ratings:</strong> @(intervention.InterventionRatings?.Count ?? 0)
                        </div>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCardContent>
        </RadzenCard>

        <div class="mt-4">
            <RadzenButton Text="Back to Interventions" Icon="arrow_back"
                Click="@(() => NavigationManager.NavigateTo("interventions"))" ButtonStyle="ButtonStyle.Secondary" />
        </div>
    }
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private Intervention? intervention;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            intervention = await InterventionService.GetInterventionByIdAsync(Id);
        }
        catch (Exception ex)
        {
            // Handle error - could redirect to error page or show error message
            Console.WriteLine($"Error loading intervention: {ex.Message}");
        }
    }

    private string GetInterventionIcon(Intervention intervention)
    {
        return intervention switch
        {
            Compound => "medication",
            Dietary => "restaurant",
            Behavioral => "psychology",
            Augmentation => "build",
            Physiological => "healing",
            Wearable => "watch",
            _ => "medical_services"
        };
    }
}