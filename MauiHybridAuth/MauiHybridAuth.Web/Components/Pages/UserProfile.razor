@page "/Profile/{UserId}"

@using Microsoft.AspNetCore.Identity
@using MauiHybridAuth.Web.Data
@using MauiHybridAuth.Shared.Models

@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation

<PageTitle>@(profileUser?.UserName ?? "User Profile")</PageTitle>

@if (profileUser == null)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (!profileUser.IsPublicProfile && !isOwnProfile)
{
    <div class="alert alert-warning">
        <h4>Private Profile</h4>
        <p>This user has chosen to keep their profile private.</p>
    </div>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h3>@profileUser.UserName</h3>
                        @if (isOwnProfile)
                        {
                            <small class="text-muted">This is your profile</small>
                        }
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-3">
                                <strong>Member since:</strong>
                            </div>
                            <div class="col-sm-9">
                                @profileUser.CreatedAt.ToString("MMMM yyyy")
                            </div>
                        </div>
                        
                        @if (!string.IsNullOrWhiteSpace(profileUser.Bio))
                        {
                            <hr />
                            <div class="row">
                                <div class="col-sm-3">
                                    <strong>Bio:</strong>
                                </div>
                                <div class="col-sm-9">
                                    <p>@profileUser.Bio</p>
                                </div>
                            </div>
                        }
                        
                        @if (isOwnProfile)
                        {
                            <hr />
                            <div class="row">
                                <div class="col-sm-3">
                                    <strong>Profile visibility:</strong>
                                </div>
                                <div class="col-sm-9">
                                    @if (profileUser.IsPublicProfile)
                                    {
                                        <span class="badge bg-success">Public</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Private</span>
                                    }
                                </div>
                            </div>
                            
                            <hr />
                            <a href="/Account/Manage" class="btn btn-primary">Edit Profile</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public string UserId { get; set; } = string.Empty;
    
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;
    
    private ApplicationUser? profileUser;
    private bool isOwnProfile;
    
    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(UserId))
        {
            Navigation.NavigateTo("/");
            return;
        }
        
        profileUser = await UserManager.FindByIdAsync(UserId);
        
        if (profileUser == null)
        {
            Navigation.NavigateTo("/");
            return;
        }
        
        // Check if this is the current user's own profile
        if (HttpContext?.User?.Identity?.IsAuthenticated == true)
        {
            var currentUser = await UserManager.GetUserAsync(HttpContext.User);
            isOwnProfile = currentUser?.Id == UserId;
        }
    }
}