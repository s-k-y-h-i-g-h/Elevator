@page "/Users"

@using MauiHybridAuth.Web.Services
@using MauiHybridAuth.Web.Data

@inject IUserProfileService UserProfileService

<PageTitle>Community Members</PageTitle>

<div class="container">
    <h2>Community Members</h2>
    <p class="text-muted">Discover other members of our biohacking community</p>
    
    @if (publicUsers == null)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!publicUsers.Any())
    {
        <div class="alert alert-info">
            <h4>No public profiles yet</h4>
            <p>Be the first to make your profile public and connect with the community!</p>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var user in publicUsers)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <div class="user-avatar me-3">
                                    <div class="avatar-circle">
                                        @GetUserInitials(user.UserName)
                                    </div>
                                </div>
                                <div>
                                    <h5 class="card-title mb-1">@user.UserName</h5>
                                    <small class="text-muted">Member since @user.CreatedAt.ToString("MMM yyyy")</small>
                                </div>
                            </div>
                            
                            @if (!string.IsNullOrWhiteSpace(user.Bio))
                            {
                                <p class="card-text">
                                    @(user.Bio.Length > 120 ? user.Bio.Substring(0, 120) + "..." : user.Bio)
                                </p>
                            }
                            else
                            {
                                <p class="card-text text-muted">
                                    <em>No bio provided</em>
                                </p>
                            }
                        </div>
                        <div class="card-footer">
                            <a href="/Profile/@user.Id" class="btn btn-primary btn-sm">View Profile</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    .user-avatar .avatar-circle {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color: #007bff;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 18px;
    }
</style>

@code {
    private IEnumerable<ApplicationUser>? publicUsers;
    
    protected override async Task OnInitializedAsync()
    {
        publicUsers = await UserProfileService.GetPublicUsersAsync();
    }
    
    private string GetUserInitials(string? username)
    {
        if (string.IsNullOrEmpty(username))
            return "?";
            
        var parts = username.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        if (parts.Length >= 2)
        {
            return $"{parts[0][0]}{parts[1][0]}".ToUpper();
        }
        
        return username.Length >= 2 ? username.Substring(0, 2).ToUpper() : username.ToUpper();
    }
}