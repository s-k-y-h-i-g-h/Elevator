@using Elevator.Shared.Services.Interfaces
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation

@if (authState?.IsAuthenticated == true)
{
    @Authorized
}
else if (NotAuthorized != null)
{
    @NotAuthorized
}
else
{
    <div class="rz-p-4 rz-text-align-center">
        <RadzenText TextStyle="TextStyle.H6">
            Please log in to access this page
        </RadzenText>
        <RadzenButton Text="Login" 
                    ButtonStyle="ButtonStyle.Primary" 
                    Click="@(() => Navigation.NavigateTo("/login"))" 
                    class="rz-mt-4" />
    </div>
}

@code {
    [CascadingParameter] public AuthenticationStateProvider.AuthenticationState? authState { get; set; }
    [Parameter] public RenderFragment? Authorized { get; set; }
    [Parameter] public RenderFragment? NotAuthorized { get; set; }
}